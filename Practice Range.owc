settings
{
	main
	{
		Description: "Modified Practice Range 2.2 by PMAJellies \n3.3 by Scales #11791 \n3.5 by github.com/Quota \n4.1 by Kocou #21168"
		Mode Name: "Practice Range 4.1"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Max Spectators: 0
		Max Team 1 Players: 1
	}

	modes
	{
		Practice Range

		General
		{
			Game Mode Start: Manual
			Hero Limit: Off
			Respawn Time Scalar: 25%
			Tank Role Passive Health Bonus: Always Enabled
		}
	}

	heroes
	{
		Team 1
		{
			Ability Cooldown Time: 0%
		}

		Team 2
		{
			Genji
			{
				Deflect Cooldown Time: 0%
			}

			Reaper
			{
				Shadow Step Cooldown Time: 0%
				Wraith Form Cooldown Time: 0%
			}

			Reinhardt
			{
				Barrier Field Cooldown Time: 0%
				Barrier Field Recharge Rate: 500%
				Charge Cooldown Time: 0%
				Damage Dealt: 10%
				Fire Strike Cooldown Time: 0%
				Spawn With Ultimate Ready: On
				Ultimate Generation - Passive Earthshatter: 500%
				Ultimate Generation Earthshatter: 500%
			}

			Sombra
			{
				Stealth Cooldown Time: 0%
				Ultimate Generation - Passive EMP: 500%
				Ultimate Generation EMP: 500%
			}

			Symmetra
			{
				Sentry Turret Cooldown Time: 0%
			}

			Tracer
			{
				Blink Cooldown Time: 0%
				Damage Dealt: 10%
				Recall Cooldown Time: 0%
			}

			Widowmaker
			{
				Grappling Hook Cooldown Time: 0%
			}
		}

		General
		{
			Spawn With Ultimate Ready: On

			Pharah
			{
				Hover Jets Unlimited Fuel: On
			}

			Zarya
			{
				Particle Barrier Cooldown Time: 0%
			}
		}
	}
}

variables
{
	global:
		1: PlayerEventInfo	//[Tmp, Hero, .., .., .., PocketMercy, Lúcio]
		2: Rnd
		3: BotToggles	//Specific Dummies-related Toggles
		5: Time
		6: Buttons
		7: ButtonsEnts
		8: ToggleAble_Tooltips	//[25:Pharahs_Mercy]
		9: ReaperDirection
		10: Dummies	//Entities of Dummies
		11: Numz_DamageDealtTotal
		12: Numz_DamageTotalTimer
		13: Numz_HealDealtTotal
		14: Numz_HealTotalTimer
		16: ConfigButtsPos
		17: ConfigButtsEnts
		25: Numberz_Enable
		26: InfSupports
		27: SupportsVoicelines
		
	player:
		1: Tmp
		2: Rnd
		3: PlayerInfo	//[..., Hero]
		11: Numz_DamageTooltipPos
		12: Numz_DamageReceivedLast
		13: Numz_DamageLastTimer
		14: Numz_DamageWasCritical
		15: Numz_HealReceivedLast
		16: Numz_HealTooltipPos
		17: Numz_HealLastTimer
		21: NoCooldowns
		22: InfAmmo
		23: Invincibility
		24: InfUlt
		25: HealthRegen
		26: HealthRegen_Timer
		27: SpeedInfo
		28: Ruler	//[Enabled, Pos1, Pos2]
}

rule("Free Ult [Crouch + Interact]")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		Set Ultimate Charge(Event Player, 100);
	}
}

rule("Global Variables")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Task Details"
		Global.Dummies[0]=Null;
		"Symmetra"
		Global.Dummies[1]=Null;
		"Enemy Pharah"
		Global.Dummies[2]=Null;
		Global.BotToggles[2] = 0;	//(0 off, 1 as enemy, 2 as friendly)
		"Reaper"
		Global.Dummies[3]=Null;
		Global.BotToggles[3] = 0;	//(0 off, 1 with wraith, 2 without wraith)
		"Roadhog"
		Global.Dummies[4]=Null;
		"Tracer"
		Global.Dummies[5]=Null;
		"Lucio"	// Lúcio
		Global.Dummies[6]=Null;
		"Enemy Pharah's Mercy"
		Global.Dummies[7]=Null;
		"Genji"
		Global.Dummies[8]=Null;
		"Mei"
		Global.Dummies[9]=Null;
		Global.BotToggles[9]=0;	//[Off, Random, Static]
		"Reinhardt"
		Global.Dummies[10]=Null;
		Global.BotToggles[10] = 0;	//(0 off, 1 random, 2 primary, 3 fire strike, 4 charge, 5 ultimate)
		"Sombra"
		Global.Dummies[11]=Null;
		"D.Va"
		Global.Dummies[12]=Null;
		"Zarya"
		Global.Dummies[13]=Null;
		"McCree"
		Global.Dummies[14]=Null;
		"Pocket_Mercy"
		Global.Dummies[15]=Null;
		"Ana_Nano"
		Global.Dummies[16]=Null;
		"Baptiste_Matrix"
		Global.Dummies[17]=Null;
		"Kiriko_Rush"
		Global.Dummies[18]=Null;
		"Pocket_Lucio"
		Global.Dummies[19]=Null;
		"Zen_Discord"
		Global.Dummies[20]=Null;
		"Ramattra_Falloff"
		Global.Dummies[21]=Null;
		"LW_Petal"
		Global.Dummies[22]=Null;
		"Widowmaker"
		Global.Dummies[23]=Null;
//		"template"
//		Global.Dummies[999]=Null;

		"Timer"
		Global.Time = 0;
	}
}

rule("Tooltips, Avatars")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Controls"
		Create In-World Text
		(
			Players Within Radius(Vector(52.43,4.5,27.44),10, All Teams, Surfaces),
			Custom String("Controls: \n• 'Crouch'+'Interact' – Ult recharge \n• 'Voicelines' to call supports \n· 'Crouch'+'Help!' – ???\n\n~Have Fun!~"),
			Vector(52.43,4.5,27.44),
			1, Clip Against Surfaces, Visible To, Color(Orange), Default Visibility
		);
	}
}

rule("Buttons, Tooltips")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Pocket_Mercy Button"
		Global.Buttons[1]=Vector(79.734,1,22.43);
		Create Effect(All Players(All Teams), Sphere, Color(Yellow), Global.Buttons[1], 0.4, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Vector(78.7,-0.25,21.7),12,All Teams, Surfaces),
			Ability Icon String(Hero(Mercy), Button(Secondary Fire)),
			Global.Buttons[1]+Vector(0,-0.15,0), 1.5, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Kiriko_Rush Button"
		Global.Buttons[2]=Vector(77.676,1,20.97);
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.Buttons[2], 0.4, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Vector(78.7,-0.25,21.7),12,All Teams, Surfaces),
			Ability Icon String(Hero(Kiriko), Button(Ultimate)),
			Global.Buttons[2]+Vector(0,-0.2,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);

		"Ana_Nano Button"
		Global.Buttons[3]=Vector(79.734,-1,22.43);
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Global.Buttons[3], 0.4, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Vector(78.7,-0.25,21.7),12,All Teams, Surfaces),
			Ability Icon String(Hero(Ana), Button(Ultimate)),
			Global.Buttons[3]+Vector(0,-0.2,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);

		"Baptiste_Matrix Button"
		Global.Buttons[4]=Vector(77.676,-1,20.97);
		Create Effect(All Players(All Teams), Sphere, Color(Turquoise), Global.Buttons[4], 0.4, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Vector(78.7,-0.25,21.7),12,All Teams, Surfaces),
			Ability Icon String(Hero(Baptiste), Button(Ultimate)),
			Global.Buttons[4]+Vector(0,-0.2,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Jump pad 1"
		Global.Buttons[5]=Vector(56.613,-0.574,-7.100);
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.Buttons[5], 1, Visible To);
		"Jump pad 2"
		Global.Buttons[6]=Vector(79.92,-0.574,8.42);
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.Buttons[6], 1, Visible To);
		
		"Widow Button"
		Global.Buttons[7]=Vector(51.968,-0.233,11.827);
		Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.Buttons[7], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[7],5,All Teams, Surfaces),
			Hero Icon String(Hero(Widowmaker)),
			Global.Buttons[7]+Vector(0,-0.1,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Symmetra Button"
		Global.Buttons[8]=Vector(55.217,8.879,-22.137);
		Create Effect(All Players(All Teams), Sphere, Color(Sky Blue), Global.Buttons[8], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[8],5,All Teams, Surfaces),
			Ability Icon String(Hero(Symmetra), Button(Ability 1)),
			Global.Buttons[8]+Vector(0,-0.1,0), 3, Do Not Clip, Visible To, Color(Gray), Default Visibility
		);

		"Pharah Button"
		Global.Buttons[9]=Vector(85.085,-0.776,10.119);
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Global.Buttons[9], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[9],5,All Teams, Surfaces),
			Hero Icon String(Hero(Pharah)),
			Global.Buttons[9]+Vector(0,-0.1,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Reaper Button"
		Global.Buttons[10]=Vector(77.125,-2.827,35.112);
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.Buttons[10], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[10],5,All Teams, Surfaces),
			Hero Icon String(Hero(Reaper)),
			Global.Buttons[10]+Vector(0,-0.1,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Roadhog Button"
		Global.Buttons[11]=Vector(85.002,8.413,-5.243);
		Create Effect(All Players(All Teams), Sphere, Color(White), Global.Buttons[11], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[11],5,All Teams, Surfaces),
			Hero Icon String(Hero(Roadhog)),
			Global.Buttons[11]+Vector(0,-0.1,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Tracer Button"
		Global.Buttons[12]=Vector(39.17,3.17,20.71);
		Create Effect(All Players(All Teams), Sphere, Color(Orange), Global.Buttons[12], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[12],5,All Teams, Surfaces),
			Hero Icon String(Hero(Tracer)),
			Global.Buttons[12]+Vector(0,-0.1,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Lucio Button"
		Global.Buttons[13]=Vector(53.486,-1.176,-8.062);
		Create Effect(All Players(All Teams), Sphere, Color(Green), Global.Buttons[13], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[13],5,All Teams, Surfaces),
			Hero Icon String(Hero(Lúcio)),
			Global.Buttons[13]+Vector(0,-0.1,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);

		"."
		disabled Create Effect(All Players(All Teams), Sphere, Color(White), Vector(40.683, 3.423, 14.280), 6, Visible To);
		
		"Genji Button"
		Global.Buttons[14]=Vector(70.697,-0.826,-21.162);
		Create Effect(All Players(All Teams), Sphere, Color(Green), Global.Buttons[14], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[14],5,All Teams, Surfaces),
			Custom String("{0}{1}", Hero Icon String(Hero(Genji)), Ability Icon String(Hero(Genji), Button(Ability 2))),
			Global.Buttons[14]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Mei Button"
		Global.Buttons[15]=Vector(75.968,-0.826,-17.423);
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Global.Buttons[15], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[15],5,All Teams, Surfaces),
			Custom String("{0}{1}", Hero Icon String(Hero(Mei)), Ability Icon String(Hero(Mei), Button(Ability 1))),
			Global.Buttons[15]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Reinhardt Button"
		Global.Buttons[16]=Vector(64.112,8.413,-30.584);
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Global.Buttons[16], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[16],5,All Teams, Surfaces),
			Hero Icon String(Hero(Reinhardt)),
			Global.Buttons[16]+Vector(0,-0.05,0), 2.5, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Sombra Button"
		Global.Buttons[17]=Vector(76.424,-2.824,45.714);
		Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.Buttons[17], 0.3, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[17],5,All Teams, Surfaces),
			Hero Icon String(Hero(Sombra)),
			Global.Buttons[17]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Destroy All Bots - Button"
		Global.Buttons[18]=Vector(46.607,3.673,31.369);
		Create Effect(All Players(All Teams), Sphere, Color(Team 1), Global.Buttons[18], 0.4, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[18],4,All Teams, Surfaces),
			Custom String("Destroy All Bots"),
			Global.Buttons[18]+Vector(0,-0.05,0), 1.5, Do Not Clip, Visible To, Color(Red), Default Visibility
		);
		
		"DVa Button"
		Global.Buttons[19]=Vector(60.735,12.319,13.829);
		Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.Buttons[19], 0.4, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[19],5,All Teams, Surfaces),
			Hero Icon String(Hero(D.Va)),
			Global.Buttons[19]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Zarya Button"
		Global.Buttons[20]=Vector(26.988,1.702,-15.138);
		Create Effect(All Players(All Teams), Sphere, Color(Turquoise), Global.Buttons[20], 0.4, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[20],5,All Teams, Surfaces),
			Hero Icon String(Hero(Zarya)),
			Global.Buttons[20]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"McCree Button"
		Global.Buttons[21]=Vector(46.960,8.525,-12.736);
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.Buttons[21], 0.4, Visible To);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[21],5,All Teams, Surfaces),
			Hero Icon String(Hero(Cassidy)),
			Global.Buttons[21]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Supports' Inf Ults"
		Global.Buttons[22]=Vector(79.93,2.92,22.58);
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.Buttons[22], 0.2, Visible To);
		Global.ButtonsEnts[22]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[22]+Vector(0,-0.35,0),10,All Teams, Surfaces),
			Custom String("Repeat"),
			Global.Buttons[22]+Vector(0,-0.35,0),
			0.75, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
		
		"Pharah's_Mercy Button"
		Global.Buttons[23]=Vector(88.878,-0.600,12.805);
		
		"Pocket_Lucio Button"
		Global.Buttons[24]=Vector(78.71,1,21.71);
		Create Effect(All Players(All Teams), Sphere, Color(Green), Global.Buttons[24], 0.4, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Vector(78.7,-0.25,21.7),12,All Teams, Surfaces),
			Ability Icon String(Hero(Lúcio), Button(Ability 1)),
			Global.Buttons[24]+Vector(0,-0.2,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Zen_Discord Button"
		Global.Buttons[25]=Vector(79.734,0,22.43);
		Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.Buttons[25], 0.4, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Vector(78.7,-0.25,21.7),12,All Teams, Surfaces),
			Ability Icon String(Hero(Zenyatta), Button(Ability 2)),
			Global.Buttons[25]+Vector(0,-0.2,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Ramattra_Falloff Button"
		Global.Buttons[26]=Vector(87.77,0,-7.24);
		Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.Buttons[26], 0.2, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[26]+Vector(0,-0.35,0),6,All Teams, Surfaces),
			Hero Icon String(Hero(Ramattra)),
			Global.Buttons[26], 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[26]+Vector(0,-0.35,0),5,All Teams, Surfaces),
			Custom String("Dummy Target"),
			Global.Buttons[26]+Vector(0,-0.1,0), 1, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		
		"Ramattra_Falloff - RidBot Button"
		Global.Buttons[27]=Vector(88,0+0.06,-7.56);
		Create Effect(All Players(All Teams), Sphere, Color(Gray), Global.Buttons[27], 0.1, Visible To Position and Radius);
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[27]+Vector(0,-0.5,0),3,All Teams, Surfaces),
			Custom String("Send Vanilla bot\nup to the platform"),
			Global.Buttons[27]+Vector(0,-0.05,0), 0.75, Do Not Clip, Visible To, Color(White), Default Visibility
		);
	}
}

rule("Placing Bots from the Start")
{
	event
	{
		Ongoing - Global;
	}
	
	actions
	{
		"Vanilla bot on Ruler - Removal"
		Global.Dummies[0]=Array(Vector(92.82,-2,-7.63),10);	// [Position, Duration]
		Create Dummy Bot(Hero(Lifeweaver), Team 2, -1, Vector(47,20,40), Vector(0,0,0));
		Global.Dummies[22]=Last Created Entity;
		Wait(1, Ignore Condition);
		
		"Ramattra_Falloff"
		Create Dummy Bot(Hero(Ramattra), Team 2, -1, Vector(92.82,-2,-7.63), Vector(-0.59,0,0.81));
		Global.Dummies[21]=Last Created Entity;
	}
}

rule("Configuration – Initialization")
{
	event
	{
		Ongoing - Global;
	}
	
	actions
	{
		"Buttons Positions"
		Global.ConfigButtsPos[0]=Vector(58.72,4.3,32.31);	//Visibility anchor
		Global.ConfigButtsPos[1]=Vector(58.58,5.80,31.45);
		Global.ConfigButtsPos[2]=Vector(58.58,5.05,31.45);
		Global.ConfigButtsPos[3]=Vector(58.58,4.3,31.45);
		Global.ConfigButtsPos[4]=Vector(58.58,3.55,31.45);
		Global.ConfigButtsPos[5]=Vector(58.72,5.80,32.31);
		Global.ConfigButtsPos[6]=Vector(58.72,5.05,32.31);
		Global.ConfigButtsPos[7]=Vector(58.72,4.3,32.31);
		Global.ConfigButtsPos[8]=Vector(58.72,3.55,32.31);
		Global.ConfigButtsPos[9]=Vector(58.88,5.80,33.22);
		Global.ConfigButtsPos[10]=Vector(58.88,5.05,33.22);
		Global.ConfigButtsPos[11]=Vector(58.88,4.3,33.22);
		Global.ConfigButtsPos[12]=Vector(58.88,3.55,33.22);
		"__________________"
		
		Create In-World Text
		(
			Players Within Radius(Vector(58.50,6.5,32.37),15,All Teams, Surfaces),
			Custom String("Configuration Panel"),
			Vector(58.50,6.5,32.37),
			1.5, Do Not Clip,	Visible To,
			Color(Lime Green), Default Visibility
		);
		
		"\n"
		"#Gaps: Tooltip:-0.35, Row:(?,-0.75,?)"
		"\n\n"
		
		"1st column\n"
		"No Cooldowns	|#|	Thanks, Blizzard, for making this impossible"
		Create Effect(All Players(All Teams), Sphere, Color(Gray), Global.ConfigButtsPos[1], 0.2, Visible To);
		Global.ConfigButtsEnts[1]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("No Cooldowns"),
			Global.ConfigButtsPos[1]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(Gray), Default Visibility
		);
		
		"Infinite Ammo"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[2], 0.2, Visible To);
		Global.ConfigButtsEnts[2]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Infinite Ammo"),
			Global.ConfigButtsPos[2]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
		
		"Invincibility"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[3], 0.2, Visible To);
		Global.ConfigButtsEnts[3]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Invincibility"),
			Global.ConfigButtsPos[3]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
		
		"Inf Ultimate Duration"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[4], 0.2, Visible To);
		Global.ConfigButtsEnts[4]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Inf Ult duration*"),
			Global.ConfigButtsPos[4]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
		
		
		"2nd column\n"
		"HealthRegen"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[5], 0.2, Visible To);
		Global.ConfigButtsEnts[5]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Health Regen"),
			Global.ConfigButtsPos[5]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
/*
		"PlaceHolder"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[6], 0.2, Visible To);
		Global.ConfigButtsEnts[6]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("placeholder"),
			Global.ConfigButtsPos[6]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);

		"PlaceHolder"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[7], 0.2, Visible To);
		Global.ConfigButtsEnts[7]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("placeholder"),
			Global.ConfigButtsPos[7]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
		
		"PlaceHolder"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[8], 0.2, Visible To);
		Global.ConfigButtsEnts[8]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("placeholder"),
			Global.ConfigButtsPos[8]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
*/		
		
		"3rd column\n"
		"Dmg/Heal Numbers"
		Global.Numberz_Enable=true;
		Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[9], 0.2, Visible To);
		Global.ConfigButtsEnts[9]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Dmg/Heal\nNumbers"),
			Global.ConfigButtsPos[9]+Vector(0,-0.35-0.075,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
		
		"SupportsVoicelines"
		Global.SupportsVoicelines=true;
		Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[10], 0.2, Visible To);
		Global.ConfigButtsEnts[10]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Supports\nVoicelines"),
			Global.ConfigButtsPos[10]+Vector(0,-0.35-0.075,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);

		"Speed Info"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[11], 0.2, Visible To);
		Global.ConfigButtsEnts[11]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("Speedometer"),
			Global.ConfigButtsPos[11]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
/*
		"PlaceHolder"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[12], 0.2, Visible To);
		Global.ConfigButtsEnts[12]=Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.ConfigButtsPos[0],8,All Teams, Surfaces),
			Custom String("placeholder"),
			Global.ConfigButtsPos[12]+Vector(0,-0.35,0),
			1, Do Not Clip,	Visible To,
			Color(White), Default Visibility
		);
*/
	}
}

rule("HUD")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	actions
	{
		
		disabled Create HUD Text
		(
			Event Player, Hero Icon String(Hero Of(Event Player)),
			String("{0} {1} {2}", Custom String("Press 'Interact' with buttons around the map to activate/deactivate bots"), Custom String("Some Bots dont deactivate, so a button in spawn will destroy them"), Custom String("'Crouch'+'Interact' for 'ult', Have Fun")),
			Null, Left, 0, Color(White), Color(White), Color(White), Visible To and String,
			Default Visibility
		);
		
		Create HUD Text
		(
			Filtered Array(Event Player, Event Player.SpeedInfo[0]==true),
			Custom String("Speed: {0}m/s ({1}%)",Horizontal Speed Of(Event Player), Event Player.SpeedInfo[0]!=true ? 0 : Round To Integer(Horizontal Speed Of(Event Player)/Event Player.SpeedInfo[1]*100, To Nearest)),	//Optimistaion is needed?
			Null,Null,
			Right,Null, Color(Green),Null,Color(Green), Visible To and String, Default Visibility
		);
		
		Create HUD Text
		(
			Filtered Array(Event Player, Event Player.Ruler[0]==true && Entity Exists(Event Player.Ruler[1])==true && Entity Exists(Event Player.Ruler[2])==true),
			Null,Null,
			Custom String("Distance: {0}m", Event Player.Ruler[0]!=true ? 0 : Distance Between(Eye Position(Event Player.Ruler[1]),Eye Position(Event Player.Ruler[2]))),
			Right,Null, Color(Orange),Null,Color(Orange), Visible To and String, Default Visibility
		);
	}
}

rule("PlayerInfo Update")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		Hero Of(Event Player)!=Event Player.PlayerInfo[1];
	}
	
	actions
	{
		"Hero"
		Event Player.PlayerInfo[1]=Hero Of(Event Player);
		
		"Max Speed"
		if (Array Contains(Array(Hero(Genji),Hero(Tracer)), Hero Of(Event Player))==true);
			Event Player.SpeedInfo[1]=6;
		else;
			Event Player.SpeedInfo[1]=5.5;
		End;
	}
}

rule("Configuration – ButtonTrigger – NoCooldowns")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[1]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[1]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[1]) <= 15;
	}
	
	actions
	{
		Big Message(Event Player, Custom String(".!. ''Blizzard Quality Experience'' .!."));
		Small Message(Event Player, Custom String("not gonna work"));
		Wait(2, Ignore Condition);
		Small Message(Event Player, Custom String("But you can change it in Lobby Settings / Heroes / General / Ability Cooldown Time.  Then restart the Match :)"));
		Wait(2.9, Ignore Condition);
		Small Message(Event Player, Custom String("But you can change it in Lobby Settings / Heroes / General / Ability Cooldown Time.  Then restart the Match :)"));
		Wait(2.9, Ignore Condition);
		Small Message(Event Player, Custom String("But you can change it in Lobby Settings / Heroes / General / Ability Cooldown Time.  Then restart the Match :)"));
		Wait(5, Ignore Condition);
	}
}

rule("Configuration – ButtonTrigger – InfAmmo")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[2]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[2]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[2]) <= 15;
	}
	
	actions
	{
		Event Player.InfAmmo=!Event Player.InfAmmo;
		
		Destroy Effect(Global.ConfigButtsEnts[2]);
		if (Event Player.InfAmmo==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[2], 0.2, Visible To);
			Global.ConfigButtsEnts[2]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[2], 0.2, Visible To);
			Global.ConfigButtsEnts[2]=Last Created Entity;
			Set Ammo(Event Player, 0, Max Ammo(Event Player,0));
			Set Ammo(Event Player, 1, Max Ammo(Event Player,1));
		End;
	}
}

rule("Configuration – ButtonTrigger – Invincibility")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[3]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[3]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[3]) <= 15;
	}
	
	actions
	{
		Event Player.Invincibility=!Event Player.Invincibility;
		
		Destroy Effect(Global.ConfigButtsEnts[3]);
		if (Event Player.Invincibility==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[3], 0.2, Visible To);
			Global.ConfigButtsEnts[3]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[3], 0.2, Visible To);
			Global.ConfigButtsEnts[3]=Last Created Entity;
		End;
		
		if (Event Player.Invincibility==true);
			Set Status(Event Player, Null, Invincible, 9999);
		else;
			Clear Status(Event Player, Invincible);
		End;
	}
}

rule("Configuration – ButtonTrigger – InfUlt")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[4]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[4]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[4]) <= 15;
	}
	
	actions
	{
		Event Player.InfUlt=!Event Player.InfUlt;
		
		Destroy Effect(Global.ConfigButtsEnts[4]);
		if (Event Player.InfUlt==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[4], 0.2, Visible To);
			Global.ConfigButtsEnts[4]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[4], 0.2, Visible To);
			Global.ConfigButtsEnts[4]=Last Created Entity;
		End;
	}
}

rule("Configuration – ButtonTrigger – HealthRegen")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[5]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[5]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[5]) <= 15;
	}
	
	actions
	{
		Event Player.HealthRegen=!Event Player.HealthRegen;
		
		Destroy Effect(Global.ConfigButtsEnts[5]);
		if (Event Player.HealthRegen==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[5], 0.2, Visible To);
			Global.ConfigButtsEnts[5]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[5], 0.2, Visible To);
			Global.ConfigButtsEnts[5]=Last Created Entity;
		End;
	}
}

rule("Configuration – ButtonTrigger – Numberz_Enable")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[9]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[9]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[9]) <= 15;
	}
	
	actions
	{
		Global.Numberz_Enable=!Global.Numberz_Enable;
		
		Destroy Effect(Global.ConfigButtsEnts[9]);
		if (Global.Numberz_Enable==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[9], 0.2, Visible To);
			Global.ConfigButtsEnts[9]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[9], 0.2, Visible To);
			Global.ConfigButtsEnts[9]=Last Created Entity;
		End;
	}
}

rule("Configuration – ButtonTrigger – SupportsVoicelines")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[10]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[10]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[10]) <= 15;
	}
	
	actions
	{
		Global.SupportsVoicelines=!Global.SupportsVoicelines;
		
		Destroy Effect(Global.ConfigButtsEnts[10]);
		if (Global.SupportsVoicelines==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[10], 0.2, Visible To);
			Global.ConfigButtsEnts[10]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[10], 0.2, Visible To);
			Global.ConfigButtsEnts[10]=Last Created Entity;
		End;
	}
}

rule("Configuration – ButtonTrigger – Speed Info")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		(
			Is Firing Primary(Event Player)==True
	||	Is Firing Secondary(Event Player)==True
	||	Is Button Held(Event Player,Button(Interact))==True
		)	== True;
		
		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[11]),
			All Players(All Teams), Event Player, True), Global.ConfigButtsPos[11]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.ConfigButtsPos[11]) <= 15;
	}
	
	actions
	{
		Event Player.SpeedInfo[0]=!Event Player.SpeedInfo[0];
		
		Destroy Effect(Global.ConfigButtsEnts[11]);
		if (Event Player.SpeedInfo[0]==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.ConfigButtsPos[11], 0.2, Visible To);
			Global.ConfigButtsEnts[11]=Last Created Entity;
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.ConfigButtsPos[11], 0.2, Visible To);
			Global.ConfigButtsEnts[11]=Last Created Entity;
		End;
	}
}

rule("Destroy All Bots")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[18]) <= 3;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		Destroy All Dummy Bots;
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[18], 100);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Team 1), Global.Buttons[18], 1);
		Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[18], 100);
		Destroy All Dummy Bots;
		
		Event Player.Ruler[0]=false;
	}
}

disabled rule("Debug")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Facing Direction Of(Event Player), Null, Null, Left, 0, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Create HUD Text(Event Player, Position Of(Event Player), Null, Null, Left, 0, Color(White), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

disabled rule("RayCast Tool")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Primary Fire)) == True;
	}

	actions
	{
		Event Player.Tmp = Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player) + Facing Direction Of(Event Player) * 100, Null, Event Player, False);
		Create Effect(All Players(All Teams), Sphere, Color(Red), Last Of(Event Player.Tmp), 0.2, None);
		Log To Inspector(Event Player.Tmp);
	}
}

rule("Numberz – HUD (Init)")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	actions
	{
		Create HUD Text
		(
			Filtered Array(Event Player, Global.Numberz_Enable==true && Global.Numz_DamageTotalTimer>0),
			Round To Integer(Global.Numz_DamageDealtTotal, To Nearest),
			Null,Null,
			Top,Null,Color(Red),Null,Null, Visible To and String, Default Visibility
		);
		
		Create HUD Text
		(
			Filtered Array(Event Player, Global.Numberz_Enable==true && Global.Numz_HealTotalTimer>0),
			Round To Integer(Global.Numz_HealDealtTotal, To Nearest),
			Null,Null,
			Top,Null,Color(Yellow),Null,Null, Visible To and String, Default Visibility
		);
	}
}

rule("Numberz - Damage: Init")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{		
		Create In-World Text
		(
			Filtered Array(All Players(All Teams), Global.Numberz_Enable==true && Event Player.Numz_DamageLastTimer > 0 && Event Player.Numz_DamageWasCritical == False),
			Event Player.Numz_DamageReceivedLast,
			Event Player.Numz_DamageTooltipPos, 1.75, Clip Against Surfaces, Visible To Position and String, Color(White),
			Default Visibility
		);
		Create In-World Text
		(
			Filtered Array(All Players(All Teams), Global.Numberz_Enable==true && Event Player.Numz_DamageLastTimer > 0 && Event Player.Numz_DamageWasCritical == True),
			Event Player.Numz_DamageReceivedLast,
			Event Player.Numz_DamageTooltipPos, 1.75, Clip Against Surfaces, Visible To Position and String, Color(Red),
			Default Visibility
		);
	}
}

rule("Numberz - Damage: Received Event")
{
	event
	{
		Player Took Damage;
		All;
		All;
	}

	actions
	{
		if (Attacker==Host Player);
			Global.Numz_DamageDealtTotal += Event Damage;
			Global.Numz_DamageTotalTimer = 2;
			Chase Global Variable Over Time(Numz_DamageTotalTimer, 0, 2, None);
		End;
		if (Event Damage>10);
			Event Player.Numz_DamageReceivedLast=Round To Integer(Event Damage, Down);
		else;
			Event Player.Numz_DamageReceivedLast=Event Damage;
		End;
		Event Player.Numz_DamageLastTimer = 1;
		Chase Player Variable Over Time(Event Player, Numz_DamageLastTimer, 0, 1, None);
		Event Player.Numz_DamageTooltipPos = Eye Position(Event Player) + Vector(0, 0.5, 0);
		Chase Player Variable Over Time(Event Player, Numz_DamageTooltipPos, Event Player.Numz_DamageTooltipPos + Vector(0, 1.5, 0), 4, None);
		Event Player.Numz_DamageWasCritical = Event Was Critical Hit;
	}
}

rule("Numberz - Damage: Timer Run out")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Global.Numz_DamageTotalTimer <= 0;
	}

	actions
	{
		Global.Numz_DamageDealtTotal = 0;
	}
}

rule("Numberz - Heal: Init")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		if (Team Of(Event Player)==Team 1);
			Create In-World Text
			(
				Filtered Array(All Players(All Teams),Event Player.Numz_HealLastTimer > 0),
				Event Player.Numz_HealReceivedLast,
				Event Player.Numz_HealTooltipPos, 1.75, Clip Against Surfaces, Visible To Position and String, Color(Yellow),
				Default Visibility
			);
		else;
			Create In-World Text
			(
				Filtered Array(All Players(All Teams),Event Player.Numz_HealLastTimer > 0),
				Event Player.Numz_HealReceivedLast,
				Event Player.Numz_HealTooltipPos, 1.75, Clip Against Surfaces, Visible To Position and String, Color(Orange),
				Default Visibility
			);
		end;
	}
}

rule("Numberz - Heal: Received Event")
{
	event
	{
		Player Received Healing;
		All;
		All;
	}

	conditions
	{
		Event Healing > 0;
	}
	
	actions
	{
		if (Healer == Host Player);
			Global.Numz_HealDealtTotal += Event Healing;
			Global.Numz_HealTotalTimer = 2;
			Chase Global Variable Over Time(Numz_HealTotalTimer, 0, 2, None);
		End;
		if (Event Healing>10);
			Event Player.Numz_HealReceivedLast=Round To Integer(Event Healing, Down);
		else;
			Event Player.Numz_HealReceivedLast=Event Healing;
		End;
		Event Player.Numz_HealLastTimer = 1;
		Chase Player Variable Over Time(Event Player, Numz_HealLastTimer, 0, 1, None);
		Event Player.Numz_HealTooltipPos = Eye Position(Event Player) + Vector(0.25, 0.5, 0);
		Chase Player Variable Over Time(Event Player, Numz_HealTooltipPos, Event Player.Numz_HealTooltipPos + Vector(1.25, 1.5, 0), 4, None);
	}
}

rule("Numberz - Heal: Timer Run out")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Global.Numz_HealTotalTimer <= 0;
	}

	actions
	{
		Global.Numz_HealDealtTotal = 0;
	}
}

rule("Infinite Ammo")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		Event Player.InfAmmo==true;
		(Ammo(Event Player,0)<Max Ammo(Event Player,0) || Ammo(Event Player,1)<Max Ammo(Event Player,1))== True;
	}
	
	actions
	{
		Set Ammo(Event Player, 0, 1000);
		Set Ammo(Event Player, 1, 1000);
	}
}

rule("Infinite Ultimate Duration (Lie)")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.InfUlt==true;
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Array Contains
		(
			Array(Hero(Ramattra), Hero(Roadhog), Hero(Winston), Hero(Ashe), Hero(Genji), Hero(Mei), Hero(Sojourn), Hero(Soldier: 76),
						Hero(Widowmaker), Hero(Brigitte), Hero(Kiriko), Hero(Lúcio), Hero(Mercy), Hero(Moira), Hero(Zenyatta)),
			Hero Of(Event Player)
		) == true;
	}

	actions
	{
		while (Event Player.InfUlt==true);
			Set Ultimate Charge(Event Player, 100);
			Wait(0.016, Ignore Condition);
			Press Button(Event Player, Button(Ultimate));
			Wait Until(Is Using Ultimate(Event Player) == False, 9999);
		End;
	}
}

rule("HealthRegen – Timer-Restart")
{
	event
	{
		Player Took Damage;
		Team 1;
		All;
	}
	
	conditions
	{
		Event Player.HealthRegen==true;
	}
	
	actions
	{
		Event Player.HealthRegen_Timer=3;
		Chase Player Variable Over Time(Event Player, HealthRegen_Timer, 0, 3, None);
	}
}

rule("HealthRegen")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		Event Player.HealthRegen==true;
		Health(Event Player)<Max Health(Event Player);
		Event Player.HealthRegen_Timer<=0;
		Is Alive(Event Player)==True;
	}
	
	actions
	{
		Heal(Event Player, Null, 50 /10);	//"20" is HP/s
		Wait(0.100, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("Buttons – Supports' Inf Ults")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		Is Button Held(Event Player,Button(Interact))==True;

		Distance Between
		(
			Ray Cast Hit Position(Eye Position(Event Player),
			Eye Position(Event Player) + Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.ConfigButtsPos[5]),
			All Players(All Teams), Event Player, True), Global.Buttons[22]
		) <= 0.2;
		
		Distance Between(Position Of(Event Player), Global.Buttons[22]) <= 10;
	}
	
	actions
	{
		Global.InfSupports=!Global.InfSupports;
		
		Destroy Effect(Global.ButtonsEnts[22]);
		if (Global.InfSupports==true);
			Create Effect(All Players(All Teams), Sphere, Color(Green), Global.Buttons[22], 0.2, Visible To);
		else;
			Create Effect(All Players(All Teams), Sphere, Color(Red), Global.Buttons[22], 0.2, Visible To);
		End;
		Global.ButtonsEnts[22]=Last Created Entity;
	}
}

rule("McCree Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[21]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[14]==Null) || (Entity Exists(Global.Dummies[14])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[21], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[21], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Cassidy), Team 2, -1, Vector(36.860, 0.349, -25.874), Vector(0, 0, 0.800));
			Global.Dummies[14]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[21], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[21], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[14]));
			Global.Dummies[14]=Null;
		End;
	}
}

rule("Zarya Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[20]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{if ((Global.Dummies[13]==Null) || (Entity Exists(Global.Dummies[13])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[20], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[20], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Zarya), Team 2, -1, Vector(17.451, 4.099, 1.090), Vector(-0.600, 0, 0.800));
			Global.Dummies[13]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[20], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[20], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[13]));
			Global.Dummies[13]=Null;
		End;
	}
}

rule("Dva Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[19]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[12]==Null) || (Entity Exists(Global.Dummies[12])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[19], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[19], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(D.Va), Team 2, -1, Vector(60.771, 12.741, 19.205), Vector(-0.600, 0, 0.800));
			Global.Dummies[12]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[19], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[19], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[12]));
			Global.Dummies[12]=Null;
		End;
	}
}

rule("Widow Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[7]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[23]==Null) || (Entity Exists(Global.Dummies[23])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[7], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[7], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Widowmaker), Team 2, -1, Vector(51.237, 1.486, 14.057), Vector(0.290, 0.880, -0.380));
			Global.Dummies[23]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[7], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[7], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[23]));
			Global.Dummies[23]=Null;
		End;
	}
}

rule("Symmetra Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Vector(55.233, 8.882, -22.158)) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[1]==Null) || (Entity Exists(Global.Dummies[1])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[8], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[8], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Symmetra), Team 2, -1, Vector(68.073, 7.673, -13.132), Vector(-0.580, 0, 0.810));
			Global.Dummies[1]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[8], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[8], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[1]));
			Global.Dummies[1]=Null;
		End;
	}
}

rule("Pharah Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[9]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		"Var Toggle"
		Global.BotToggles[2]=Global.BotToggles[2]+1;
		if (Global.BotToggles[2]>2);
			Global.BotToggles[2]=0;
		End;
		
		"Action"
		if (Global.BotToggles[2]>0);
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(Yellow), Global.Buttons[9], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Yellow), Global.Buttons[9], 1);
			"Dummy creation/swapping"
			if (Global.BotToggles[2]==1);
				"Enemy Pharah"
				Create Dummy Bot(Hero(Pharah), Team 2, -1, Vector(84.571, 0.076, 7.529), Vector(-0.600, 0, 0.800));
			else;	//Global.BotToggles[2]==1
				"Friendly Pharah"
				Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[7]));
				Global.Dummies[7]=Null;
				Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[2]));
				Create Dummy Bot(Hero(Pharah), Team 1, -1, Vector(84.571, 0.076, 7.529), Vector(-0.600, 0, 0.800));
			End;
			"Saving Last Created Pharah's Entity info"
			Global.Dummies[2]=Last Created Entity;
		else;	//Global.BotToggles[2]==0
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[9], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[9], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 1, Slot Of(Global.Dummies[2]));
			Global.Dummies[2]=Null;
		End;
	}
}

rule("Reaper Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[10]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		If(Global.BotToggles[3] == 0);
			Create Dummy Bot(Hero(Reaper), Team 2, -1, Vector(77.884, 3.813, 35.699), Vector(0.810, -0.180, 0.560));
			Global.Dummies[3]=Last Created Entity;
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[10], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[10], 1);
			Global.BotToggles[3] = 1;
			Small Message(Event Player, Custom String("Reaper: Shadow step with wraith form"));
		Else If(Global.BotToggles[3] == 1);
			Global.BotToggles[3] = 2;
			Small Message(Event Player, Custom String("Reaper: Shadow step without wraith form"));
		Else;
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[3]));
			Global.Dummies[3]=Null;
			Global.BotToggles[3] = 0;
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[10], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[10], 1);
		End;
	}
}

rule("Roadhog Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Vector(85.002, 8.414, -5.243)) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[4]==Null) || (Entity Exists(Global.Dummies[4])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[11], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[11], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Roadhog), Team 2, -1, Vector(79.684, 8.674, -5.637), Vector(-0.600, 0, 0.800));
			Global.Dummies[4]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[11], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[11], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[4]));
			Global.Dummies[4]=Null;
		End;
	}
}

rule("Tracer Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[12]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[5]==Null) || (Entity Exists(Global.Dummies[5])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[12], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[12], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Tracer), Team 2, -1, Vector(43.229, 3.173, 11.398), Vector(-0.600, 0, 0.800));
			Global.Dummies[5]=Last Created Entity;
			Global.BotToggles[5]=True;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[12], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[12], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[5]));
			Global.Dummies[5]=Null;
			Global.BotToggles[5]=False;
		End;
	}
}

rule("Lucio Button")	// Lúcio
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[13]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
	"Lúcio"
		if ((Global.Dummies[6]==Null) || (Entity Exists(Global.Dummies[6])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[13], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[13], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Lúcio), Team 2, -1, Vector(52.437, -0.827, -15.581), Vector(-0.600, 0, 0.800));
			Global.Dummies[6]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[13], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[13], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[6]));
			Global.Dummies[6]=Null;
		End;
	}
}

rule("Baptiste_Matrix Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.Buttons[4], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[4]), Null,
			Event Player, False)) <= 0.4;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		
		Small Message(Event Player, 2);
		Wait(1, Ignore Condition);
		Small Message(Event Player, 1);
		Wait(0.5, Ignore Condition);
		
		if (Global.InfSupports!=true);
			Create Dummy Bot(Hero(Baptiste), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[17]=Last Created Entity;
		else;
			while (Global.InfSupports==true);
				Create Dummy Bot(Hero(Baptiste), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
				Global.Dummies[17]=Last Created Entity;
				Wait(10.5-0.5, Ignore Condition);
			End;
		End;
	}
}

rule("Ana_Nano Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.Buttons[3], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[3]), Null,
			Event Player, False)) <= 0.4;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		
		Small Message(Event Player, 2);
		Wait(1, Ignore Condition);
		Small Message(Event Player, 1);
		Wait(0.5, Ignore Condition);
		
		if (Global.InfSupports!=true);
			Create Dummy Bot(Hero(Ana), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[16]=Last Created Entity;
		else;
			while (Global.InfSupports==true);
				Create Dummy Bot(Hero(Ana), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
				Global.Dummies[16]=Last Created Entity;
				Wait(8.5-0.25, Ignore Condition);
			End;
		End;
	}
}

rule("Pocket_Mercy Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.Buttons[1], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[1]), Null,
			Event Player, False)) <= 0.4;
	}

	actions
	{
		if ((Global.Dummies[15]==Null) || (Entity Exists(Global.Dummies[15])==false));
			Create Dummy Bot(Hero(Mercy), Team 1, -1, Vector(84,-3,18), Direction Towards(Position Of(Event Player), Eye Position(Event Player)));
			Global.Dummies[15]=Last Created Entity;
			Global.PlayerEventInfo[5]=Event Player;
			Small Message(Event Player, Custom String("Use ''Need Healing!'' for Heal"));
		else;
			Destroy Dummy Bot(Team 1, Slot Of(Global.Dummies[15]));
			Global.Dummies[15]=Null;
			Global.PlayerEventInfo[5]=Null;
		End;
	}
}

rule("Kiriko_Rush Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.Buttons[2], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[2]), Null,
			Event Player, False)) <= 0.4;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		
		Small Message(Event Player, 2);
		Wait(1, Ignore Condition);
		Small Message(Event Player, 1);
		Wait(0.5, Ignore Condition);
		
		if (Global.InfSupports!=true);	//default
			Create Dummy Bot(Hero(Kiriko), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[18]=Last Created Entity;
		else;
			while (Global.InfSupports==true);
				Create Dummy Bot(Hero(Kiriko), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
				Global.Dummies[18]=Last Created Entity;
//				Wait Until(Is Using Ultimate(Global.Dummies[18])==True, 12);	//can't read properly
				Wait(12-0.75, Ignore Condition);
			End;
		End;
	}
}

rule("Genji Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[14]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[8]==Null) || (Entity Exists(Global.Dummies[8])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[14], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[14], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Genji), Team 2, -1, Global.Buttons[14], Vector(-0.600, 0, 0.800));
			Global.Dummies[8]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[14], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[14], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[8]));
			Global.Dummies[8]=Null;
		End;
	}
}

rule("Mei Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[15]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		"Var Toggle"
		Global.BotToggles[9]=Global.BotToggles[9]+1;
		if (Global.BotToggles[9]>2);
			Global.BotToggles[9]=0;
		End;
		
		"Tips"
		if (Global.BotToggles[9]==1);
			Small Message(Event Player, Custom String("Mei: Random Cryo time"));
		else if (Global.BotToggles[9]==2);
			Small Message(Event Player, Custom String("Mei: Static Cryo time (5 sec)"));
		End;
		
		"Action"
		if (Global.BotToggles[9]>0);
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[15], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[15], 1);
			if ((Global.Dummies[9]==Null) || (Entity Exists(Global.Dummies[9])==false));
				"Dummy creation"
				Create Dummy Bot(Hero(Mei), Team 2, -1, Global.Buttons[15], Vector(-0.600, 0, 0.800));
				Global.Dummies[9]=Last Created Entity;
			End;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[15], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[15], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[9]));
			Global.Dummies[9]=Null;
		End;
	}
}

rule("Reinhardt Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[16]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		"Var Toggle"
		Global.BotToggles[10]=Global.BotToggles[10]+1;
		if (Global.BotToggles[10]>5);
			Global.BotToggles[10]=0;
		End;
		
		"Tips"
		if (Global.BotToggles[10]==1);
			Small Message(Event Player, Custom String("Reinhardt: Random ability"));
		else if (Global.BotToggles[10]==2);
			Small Message(Event Player, Custom String("Reinhardt: Rocket hammer"));
		else if (Global.BotToggles[10]==3);
			Small Message(Event Player, Custom String("Reinhardt: Fire strike"));
		else if (Global.BotToggles[10]==4);
			Small Message(Event Player, Custom String("Reinhardt: Charge"));
		else if (Global.BotToggles[10]==5);
			Small Message(Event Player, Custom String("Reinhardt: Earthshatter"));
		End;
		
		"Action"
		if (Global.BotToggles[10]>0);
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[16], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Yellow), Global.Buttons[16], 1);
			if ((Global.Dummies[10]==Null) || (Entity Exists(Global.Dummies[10])==false));
				"Dummy creation"
				Create Dummy Bot(Hero(Reinhardt), Team 2, -1, Global.Buttons[16], Vector(-0.600, 0, 0.800));
				Global.Dummies[10]=Last Created Entity;
			End;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[15], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[15], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[10]));
			Global.Dummies[10]=Null;
		End;
	}
}

rule("Sombra Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[17]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[11]==Null) || (Entity Exists(Global.Dummies[11])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[17], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[17], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Sombra), Team 2, -1, Vector(75.148, 0.298, 47.472), Vector(-0.600, 0, 0.800));
			Global.Dummies[11]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[17], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[17], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[11]));
			Global.Dummies[11]=Null;
		End;
	}
}

rule("Baptiste_Matrix")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Baptiste;
	}

	conditions
	{
		Event Player == Global.Dummies[17];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Facing Direction Of(Global.PlayerEventInfo[0])+Vector(0,-0.25,0), 1000, To World, Direction and Turn Rate);
		Set Ultimate Charge(Event Player, 100);
		Set Status(Event Player, Null, Phased Out, 5);
		Teleport(Event Player, Position Of(Global.PlayerEventInfo[0])+Vector(0,0,-1));
		Wait(0.1, Ignore Condition);
		Press Button(Event Player, Button(Ultimate));
		Wait(0.050, Ignore Condition);
		Press Button(Event Player, Button(Primary Fire));
		Wait(0.1, Ignore Condition);
		Set Status(Event Player, Null, Hacked, 3);
		Teleport(Event Player, Vector(47,20,40));
		Wait(10.5-0.1, Ignore Condition);
		Destroy Dummy Bot(Team 1, Slot Of(Event Player));
		Global.Dummies[17]=Null;
	}
}

rule("Ana_Nano Boost")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Ana;
	}

	conditions
	{
		Event Player == Global.Dummies[16];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Global.PlayerEventInfo[0])), 5100, To World, Direction and Turn Rate);
		Wait(0.050, Ignore Condition);
		Set Ultimate Charge(Event Player, 100);
		Wait(0.250, Ignore Condition);
		Set Status(Event Player, Null, Phased Out, 5);
		Teleport(Event Player, Position Of(Global.PlayerEventInfo[0])+Vector(0,0,-1));
		Wait(0.25, Ignore Condition);
		Press Button(Event Player, Button(Ultimate));
		Wait(0.25, Ignore Condition);
		Set Status(Event Player, Null, Hacked, 1);
		Teleport(Event Player, Vector(47,20,40));
		Wait(8.5-0.25, Ignore Condition);
		Destroy Dummy Bot(Team 1, Slot Of(Event Player));
		Global.Dummies[16]=Null;
	}
}

rule("Pocket_Mercy")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Mercy;
	}
	
	conditions
	{
		Event Player == Global.Dummies[15];
		Is Alive(Global.PlayerEventInfo[5])==True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		"Preps"
		Wait(0.25, Ignore Condition);
		Start Scaling Player(Event Player, 0.15, True);
		Set Status(Event Player, Null, Phased Out, 9999);
		Start Forcing Dummy Bot Name(Event Player, Custom String("Pocket Mercy"));
		
		"Cycle"
		while (Global.PlayerEventInfo[5]!=Null);
			Wait Until(Is Alive(Event Player)==True, 9999);
			if (Is Alive(Global.PlayerEventInfo[5])==False);
				Wait Until(Is Alive(Global.PlayerEventInfo[5])==True, 9999);
				Wait(1, Ignore Condition);
			End;
			Attach Players(Event Player, Global.PlayerEventInfo[5], Vector(0,-0.25,-1)+Eye Position(Global.PlayerEventInfo[5])-Position Of(Global.PlayerEventInfo[5]));
			Global.PlayerEventInfo[1]=Hero Of(Global.PlayerEventInfo[5]);
			Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Position Of(Global.PlayerEventInfo[5])), 1000, To World, Direction and Turn Rate);
			//Start Facing(Event Player, Direction Towards(Event Player, Eye Position(Global.PlayerEventInfo[5])), 1000, To World, Direction and Turn Rate);	//worse
			Set Weapon(Event Player, 1);
			Start Holding Button(Event Player, Button(Secondary Fire));
			//Start Holding Button(Event Player, Button(Jump));	//Just for Valkyrie form. Creates annoying particles.
			
			Wait Until
			(
				Is Alive(Global.PlayerEventInfo[5])==False
		||	Global.PlayerEventInfo[1]!=Hero Of(Global.PlayerEventInfo[5])
		||	Is Alive(Event Player)==False, 9999
			);
			Stop Holding Button(Event Player, Button(Secondary Fire));
			Stop Facing(Event Player);
			Detach Players(Event Player);

		End;
	}
}

rule("Pocket_Mercy - Heal")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		Global.Dummies[15]!=Null;
		Health(Event Player)<Max Health(Event Player);
		Is Communicating(Event Player, Need Healing)==True;
		Is Alive(Global.PlayerEventInfo[5])==True;
		Is Alive(Event Player)==True;
	}

	actions
	{
		Stop Holding Button(Global.Dummies[15], Button(Secondary Fire));
		Start Holding Button(Global.Dummies[15], Button(Primary Fire));
		Wait Until(Health(Event Player)>=Max Health(Event Player), 9999);
		Stop Holding Button(Global.Dummies[15], Button(Primary Fire));
		Start Holding Button(Global.Dummies[15], Button(Secondary Fire));
	}
}

rule("Pharah Bot Up/Down Control")
{
	event
	{
		Ongoing - Each Player;
		All;
		Pharah;
	}

	conditions
	{
		Event Player == Global.Dummies[2];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Vector(60.865, 1.300,
			26.734), Team 1))), 500, To World, Direction and Turn Rate);
		Skip If(Y Component Of(Eye Position(Event Player)) >= 18, 3);
		Start Holding Button(Event Player, Button(Jump));
		Wait(Random Real(0.500, 1), Abort When False);
		Stop Holding Button(Event Player, Button(Jump));
		Wait(Random Real(0.3, 0.800), Abort When False);
		Loop If(Is Alive(Event Player));
	}
}

rule("Pharah Bot Left/Right Control")
{
	event
	{
		Ongoing - Each Player;
		All;
		Pharah;
	}

	conditions
	{
		Event Player == Global.Dummies[2];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Throttle In Direction(Event Player, Vector(0.800, 0, 0.600), 1, To World, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Skip If(Distance Between(Position Of(Event Player), Vector(54.693, 8.451, -24.438)) <= 45, 2);
		Start Throttle In Direction(Event Player, Vector(-0.800, 0, -0.600), 1, To World, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Loop If(Is Alive(Event Player));
	}
}

rule("Pharah Bot Forward/Back Control")
{
	event
	{
		Ongoing - Each Player;
		All;
		Pharah;
	}

	conditions
	{
		Event Player == Global.Dummies[2];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Skip If(Distance Between(Position Of(Event Player), Vector(74.267, 6.174, 42.611)) >= 55, 2);
		Start Throttle In Direction(Event Player, Vector(0.600, 0, -0.800), 1, To World, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Skip If(Distance Between(Position Of(Event Player), Vector(74.267, 6.174, 42.611)) <= 32, 2);
		Start Throttle In Direction(Event Player, Vector(-0.600, 0, 0.800), 1, To World, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Wait(0.016, Ignore Condition);
		Loop If(Is Alive(Event Player));
	}
}

rule("Pharah Bot Dies")
{
	event
	{
		Player Died;
		All;
		Pharah;
	}

	conditions
	{
		Event Player == Global.Dummies[2];
	}

	actions
	{
		if (Global.BotToggles[2]==1);
			"Enemy Pharah"
			Destroy Dummy Bot(Team 2, Slot Of(Event Player));
			Create Dummy Bot(Hero(Pharah), Team 2, -1, Vector(84.571, 0.076, 7.529), Vector(-0.600, 0, 0.800));
		else;	//Global.BotToggles[2]==1
			"Friendly Pharah"
			Destroy Dummy Bot(Team 1, Slot Of(Global.Dummies[2]));
			Create Dummy Bot(Hero(Pharah), Team 1, -1, Vector(84.571, 0.076, 7.529), Vector(-0.600, 0, 0.800));
		End;
		"Saving Last Created Pharah's Entity info"
		Global.Dummies[2]=Last Created Entity;
	}
}

rule("Sym Turret Movement")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Symmetra;
	}
	
	conditions
	{
		Event Player == Global.Dummies[1];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Press Button(Event Player, Button(Ability 1));
		Global.Rnd[0] = Random Integer(83, 92);
		Teleport(Event Player, Vector(Global.Rnd[0], Random Real(7, 11), Global.Rnd[0] - 130));
		Wait(1, Ignore Condition);
		Loop;
	}
}

rule("Sym Turret Rules")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Symmetra;
	}
	
	conditions
	{
		Event Player == Global.Dummies[1];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Set Gravity(Event Player, 0);
		Set Damage Received(Event Player, 300);
		Set Status(Event Player, Null, Invincible, 9999);
	}
}

rule("Reaper Bot Movement")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Reaper;
	}
	
	conditions
	{
		Event Player == Global.Dummies[5];
		Is Alive(Event Player) == True;
	}

	actions
	{
		"Determine direction to look depending on the column the Reaper is standing."
		If(X Component Of(Position Of(Event Player)) < 80);
			Global.ReaperDirection = 1;
		Else;
			Global.ReaperDirection = -1;
		End;
		Start Facing(Event Player, Vector(Global.ReaperDirection * 0.810, -0.180, Global.ReaperDirection * 0.560), 500, To World,
			Direction and Turn Rate);
		Wait(1, Ignore Condition);
		Press Button(Event Player, Button(Ability 2));
		Wait(0.200, Ignore Condition);
		Press Button(Event Player, Button(Primary Fire));
		Wait(2, Ignore Condition);
		If(Global.BotToggles[3] == 1);
			Press Button(Event Player, Button(Ability 1));
			Wait(1, Ignore Condition);
			Press Button(Event Player, Button(Ability 1));
		Else;
			Wait(1, Ignore Condition);
		End;
		Loop If(Is Alive(Event Player));
	}
}

rule("Reaper Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Reaper;
	}
	
	conditions
	{
		Event Player == Global.Dummies[5];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Reaper), Team 2, -1, Vector(77.884, 3.813, 35.699), Vector(0.810, -0.170, 0.560));
		Global.Dummies[5]=Last Created Entity;
	}
}

rule("Widow Bot Movement")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Widowmaker;
	}
	
	conditions
	{
		Event Player == Global.Dummies[23];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Teleport(Event Player, Vector(51.237, 1.486, 14.057));
		Wait(0.500, Ignore Condition);
		Set Facing(Event Player, Vector(0.290, 0.880, -0.380), To World);
		Press Button(Event Player, Button(Ability 1));
		Wait(0.800, Ignore Condition);
		Press Button(Event Player, Button(Jump));
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 500, To World, Direction and Turn Rate);
		Wait(4.500, Ignore Condition);
		Stop Facing(Event Player);
		Loop If(Is Alive(Event Player));
	}
}

rule("Widow Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Widowmaker;
	}
	
	conditions
	{
		Event Player == Global.Dummies[23];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Widowmaker), Team 2, -1, Vector(51.237, 1.486, 14.057), Vector(0.290, 0.880, -0.380));
		Global.Dummies[23]=Last Created Entity;
	}
}

rule("Roadhog Bot Health")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Roadhog;
	}
	
	conditions
	{
		Event Player == Global.Dummies[4];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Set Max Health(Event Player, 714.2857142857143);
		Wait(0.016, Ignore Condition);
		Heal(Event Player, Null, 50000);
		Set Gravity(Event Player, 500);
	}
}

rule("Roadhog Bot Timer")
{
	event
	{
		Player Took Damage;
		Team 2;
		Roadhog;
	}
	
	conditions
	{
		Event Player == Global.Dummies[4];
		Global.Time == 0;
		Is Alive(Event Player) == True;
	}
	actions
	{
		Wait(0.016, Ignore Condition);
		Global.Time = 10;
		Create In-World Text(All Players(All Teams), Custom String("Time: {0}s", Global.Time), Vector(79.648, 11, -5.662), 3,
			Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
		Chase Global Variable Over Time(Time, 0, 10, None);
		Wait(7, Ignore Condition);
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Event Player, 100);
		Wait(1, Ignore Condition);
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Event Player, 100);
		Wait(1, Ignore Condition);
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Event Player, 100);
		Wait(1, Ignore Condition);
		Destroy In-World Text(Last Text ID);
		Set Status(Event Player, Null, Invincible, 3);
		Set Status(Event Player, Null, Phased Out, 3);
		Wait(0.016, Ignore Condition);
		Create In-World Text(All Players(All Teams), 5000 - 0.01 - Health(Event Player), Vector(79.665, 11, -5.650), 2, Clip Against Surfaces,
			Visible To Position and String, Color(White), Default Visibility);
		Wait(3, Ignore Condition);
		Set Max Health(Event Player, 714.2857142857143);
		Wait(0.016, Ignore Condition);
		Heal(Event Player, Null, 50000);
		Teleport(Event Player, Vector(79.630, 8.667, -5.675));
		Destroy In-World Text(Last Text ID);
	}
}

rule("Roadhog Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Roadhog;
	}
	
	conditions
	{
		Event Player == Global.Dummies[4];
	}

	actions
	{
		Big Message(All Players(All Teams), Custom String("WOW"));
		Wait(3, Ignore Condition);
		Respawn(Event Player);
		Wait(0.500, Ignore Condition);
		Teleport(Event Player, Vector(79.681, 8.849, -5.635));
		Set Facing(Event Player, Vector(-0.600, 0, 0.800), To World);
	}
}

rule("Jump Pad 1")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[5]) <= 2;
		Is Button Held(Event Player, Button(Jump)) == True;
	}

	actions
	{
		Apply Impulse(Event Player, Vector(0, 1, 0), 20, To World, Cancel Contrary Motion);
	}
}

rule("Jump Pad 2")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Distance Between(Position Of(Event Player), Global.Buttons[6]) <= 2;
		Is Button Held(Event Player, Button(Jump)) == True;
	}

	actions
	{
		Apply Impulse(Event Player, Vector(0, 1, 0), 20, To World, Cancel Contrary Motion);
	}
}

disabled rule("Teleport")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		Set Facing(Event Player, Vector(0.010, 0.020, 1), To World);
		Teleport(Event Player, Vector(78.75,-2,16.28));
	}
}

rule("Tracer Bot Foward/Back Control")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Tracer;
	}

	conditions
	{
		Event Player == Global.Dummies[5];
		Is Alive(Event Player) == True;
		Global.BotToggles[5] == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 500, To World, Direction and Turn Rate);
		Start Throttle In Direction(Event Player, Vector(0.600, 0, -0.800), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 1), Abort When False);
		Start Throttle In Direction(Event Player, Vector(-0.600, 0, 0.800), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 1), Abort When False);
		Loop If Condition Is True;
	}
}

rule("Tracer Bot Left/Right Control")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Tracer;
	}

	conditions
	{
		Event Player == Global.Dummies[5];
		Is Alive(Event Player) == True;
		Global.BotToggles[5] == True;
	}

	actions
	{
		Start Throttle In Direction(Event Player, Vector(-0.800, 0, -0.600), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 1), Abort When False);
		Start Throttle In Direction(Event Player, Vector(0.800, 0, 0.600), 2, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 1), Abort When False);
		Loop If Condition Is True;
	}
}

rule("Tracer Bot Abilities Control")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Tracer;
	}

	conditions
	{
		Event Player == Global.Dummies[5];
	}

	actions
	{
		Event Player.Tmp = Random Integer(0, 10);
		Press Button(Event Player, Button(Secondary Fire));
		Skip If(Event Player.Tmp != 1, 3);
		Start Holding Button(Event Player, Button(Crouch));
		Wait(0.700, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Skip If(Event Player.Tmp != 2, 1);
		Press Button(Event Player, Button(Primary Fire));
		Skip If(Event Player.Tmp != 3, 3);
		Start Holding Button(Event Player, Button(Crouch));
		Wait(0.700, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Skip If(Event Player.Tmp != 4, 3);
		Start Holding Button(Event Player, Button(Primary Fire));
		Wait(0.700, Ignore Condition);
		Stop Holding Button(Event Player, Button(Primary Fire));
		Wait(Random Real(2, 3), Ignore Condition);
		Loop If(Is Alive(Event Player));
	}
}

rule("Tracer Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Tracer;
	}

	conditions
	{
		Event Player == Global.Dummies[5];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Tracer), Team 2, -1, Vector(43.229, 3.173, 11.398), Vector(-0.600, 0, 0.800));
		Global.Dummies[5]=Last Created Entity;
		Global.BotToggles[5] = True;
	}
}

rule("Tracer Bot Out of Bounds")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Tracer;
	}

	conditions
	{
		Event Player == Global.Dummies[5];
		Distance Between(Position Of(Event Player), Vector(41.201, 3.423, 14.473)) >= 6;
	}

	actions
	{
		Global.BotToggles[5] = False;
		Start Throttle In Direction(Event Player, Direction Towards(Position Of(Event Player), Vector(40.869, 3.177, 14.074)), 1, To World,
			Replace existing throttle, Direction and Magnitude);
		Wait(0.050, Ignore Condition);
		Skip If(Distance Between(Position Of(Event Player), Vector(9.159, 3.504, -9.189)) < 46, 1);
		Press Button(Event Player, Button(Jump));
		Loop If Condition Is True;
		Wait(Random Real(0.500, 0.800), Ignore Condition);
		Global.BotToggles[5] = True;
	}
}

rule("Tracer Falls")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Tracer;
	}

	conditions
	{
		Event Player == Global.Dummies[5];
		Y Component Of(Position Of(Event Player)) <= 0.500;
	}

	actions
	{
		Press Button(Event Player, Button(Ability 2));
	}
}

rule("Lucio Bot Foward/Back Control")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Lúcio;
	}
	
	conditions
	{
		Event Player == Global.Dummies[6];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 500, To World, Direction and Turn Rate);
		Start Throttle In Direction(Event Player, Vector(0.600, 0, -0.800), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Start Throttle In Direction(Event Player, Vector(-0.600, 0, 0.800), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Loop If(Is Alive(Event Player));
	}
}

rule("Lucio Bot Left/Right Control")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Lúcio;
	}
	
	conditions
	{
		Event Player == Global.Dummies[6];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Throttle In Direction(Event Player, Vector(-0.800, 0, -0.600), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Start Throttle In Direction(Event Player, Vector(0.800, 0, 0.600), 1, To Player, Replace existing throttle,
			Direction and Magnitude);
		Wait(Random Real(0.500, 2), Abort When False);
		Wait(0.016, Ignore Condition);
		Loop If(Is Alive(Event Player));
	}
}

rule("Lucio Bot Abilities Control")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Lúcio;
	}
	
	conditions
	{
		Event Player == Global.Dummies[6];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Event Player.Tmp = Random Integer(0, 10);
		Press Button(Event Player, Button(Jump));
		Skip If(Event Player.Tmp != 1, 1);
		Press Button(Event Player, Button(Secondary Fire));
		Skip If(Event Player.Tmp != 3, 3);
		Start Holding Button(Event Player, Button(Crouch));
		Wait(1, Ignore Condition);
		Stop Holding Button(Event Player, Button(Crouch));
		Skip If(Event Player.Tmp != 4, 1);
		Press Button(Event Player, Button(Ability 2));
		Skip If(Event Player.Tmp != 5, 1);
		Press Button(Event Player, Button(Ability 2));
		Skip If(Event Player.Tmp != 6, 1);
		Press Button(Event Player, Button(Ability 2));
		Wait(0.500, Ignore Condition);
		Press Button(Event Player, Button(Jump));
		Press Button(Event Player, Button(Ability 1));
		Wait(0.500, Ignore Condition);
		Press Button(Event Player, Button(Jump));
		Press Button(Event Player, Button(Ability 1));
		Wait(0.500, Ignore Condition);
		Loop If(Is Alive(Event Player));
	}
}

rule("Lucio Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Lúcio;
	}
	
	conditions
	{
		Event Player == Global.Dummies[6];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Lúcio), Team 2, -1, Vector(52.437, -0.827, -15.581), Vector(-0.600, 0, 0.800));
		Global.Dummies[6]=Last Created Entity;
	}
}

rule("Lucio Bot Out of Bounds")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Lúcio;
	}

	conditions
	{
		Event Player == Global.Dummies[6];
		Distance Between(Position Of(Event Player), Vector(52.284, -0.826, -17.559)) >= 7.600;
	}

	actions
	{
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), Vector(52.284, -0.826, -17.559)), Absolute Value(
			Distance Between(Event Player, Vector(52.284, -0.826, -17.559))), To World, Cancel Contrary Motion);
	}
}

rule("Friendly Pharah Bot Health")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Pharah;
	}

	conditions
	{
		Event Player == Global.Dummies[2];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Set Max Health(Event Player, 9999);
		disabled Set Healing Received(Event Player, 0.010);
		Wait(0.050, Ignore Condition);
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Vector(61.797, 0.475,
			28.245), Team 1))), 800, To World, Direction and Turn Rate);
		Damage(Event Player, Null, Health(Event Player) - 1);
	}
}

rule("Friendly Pharah Bot Fly")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Pharah;
	}

	conditions
	{
		Event Player == Global.Dummies[2];
		Is Alive(Event Player) == True;
		Y Component Of(Position Of(Event Player)) <= -2;
	}

	actions
	{
		Press Button(Event Player, Button(Ability 1));
	}
}

rule("Pharah's_Mercy Button Show")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.BotToggles[2] == 1;
	}

	actions
	{
		Create Effect(All Players(All Teams), Sphere, Color(Yellow), Global.Buttons[23], 0.4, Visible To);
		Global.ButtonsEnts[23] = Last Created Entity;
		Create In-World Text
		(
			Players Within Radius(Global.Buttons[23],5,All Teams, Surfaces),
			Hero Icon String(Hero(Mercy)),
			Global.Buttons[23]+Vector(0,-0.05,0), 2, Do Not Clip, Visible To, Color(White), Default Visibility
		);
		Global.ToggleAble_Tooltips[23]=Last Text ID;
	}
}

rule("Pharah's_Mercy Button Hide")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.BotToggles[2] != 1;
	}

	actions
	{
		Destroy In-World Text(Global.ToggleAble_Tooltips[23]);
		Destroy Effect(Global.ButtonsEnts[23]);
	}
}

rule("Pharah's_Mercy Button")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Global.BotToggles[2] == 1;
		Distance Between(Position Of(Event Player), Global.Buttons[23]) <= 2;
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		if ((Global.Dummies[7]==Null) || (Entity Exists(Global.Dummies[7])==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[23], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[23], 1);
			"Dummy creation"
			Create Dummy Bot(Hero(Mercy), Team 2, -1, Position Of(Global.Dummies[2]) - Facing Direction Of(Global.Dummies[2]), Vector(-0.580, 0, 0.810));
			Global.Dummies[7]=Last Created Entity;
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[23], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[23], 1);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[7]));
			Global.Dummies[7]=Null;
		End;
	}
}

rule("Pharah's_Mercy Bot Movement")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Mercy;
	}
	
	conditions
	{
		Event Player == Global.Dummies[7];
		Entity Exists(Global.Dummies[2])==true;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Global.Dummies[2])), 300, To World, Direction and Turn Rate);
		Set Weapon(Event Player, 1);
		Wait(0.1,Ignore Condition);
		Start Holding Button(Event Player, Button(Primary Fire));
		Start Holding Button(Event Player, Button(Jump));
		Wait(Random Real(0.500, 1.500), Ignore Condition);
		Stop Holding Button(Event Player, Button(Jump));
		Wait(Random Real(0.3, 0.800), Ignore Condition);
		Start Holding Button(Event Player, Button(Ability 1));
		Wait(0.500, Ignore Condition);
		Start Holding Button(Event Player, Button(Jump));
		Stop Holding Button(Event Player, Button(Ability 1));
		Loop If(Is Alive(Event Player) == True);
	}
}

rule("Pharah's_Mercy Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Mercy;
	}
	
	conditions
	{
		Event Player == Global.Dummies[7];
		Entity Exists(Global.Dummies[2])==true;
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Mercy), Team 2, -1, Position Of(Global.Dummies[2]) - Facing Direction Of(Global.Dummies[2]), Vector(-0.600, 0, 0.800));
		Global.Dummies[7]=Last Created Entity;
	}
}

rule("Kiriko_Rush")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Kiriko;
	}

	conditions
	{
		Event Player == Global.Dummies[18];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Scaling Player(Event Player, 0.1, True);
		Start Facing(Event Player, Facing Direction Of(Global.PlayerEventInfo[0]), 1000, To World, Direction and Turn Rate);
		Wait(0.050, Ignore Condition);
		Set Ultimate Charge(Event Player, 100);
		Wait(0.250, Ignore Condition);
		Set Status(Event Player, Null, Phased Out, 5);
		Teleport(Event Player, Position Of(Global.PlayerEventInfo[0]));
		Press Button(Event Player, Button(Ultimate));
		Wait(0.75, Ignore Condition);
		Set Status(Event Player, Null, Hacked, 1);
		Teleport(Event Player, Vector(47,20,40));
		Wait(12-0.75, Ignore Condition);
		Destroy Dummy Bot(Team 1, Slot Of(Event Player));
		Global.Dummies[18]=Last Created Entity;
	}
}

rule("Zarya Charge")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Zarya;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Ability 1)) == True;
	}

	actions
	{
		Create Dummy Bot(Hero(Torbjörn), Team 2, -1, Position Of(Event Player) - Facing Direction Of(Event Player), Facing Direction Of(Event Player));
		Event Player.Tmp[0]=Last Created Entity;
		Start Facing(Event Player.Tmp[0], Direction Towards(Eye Position(Event Player.Tmp[0]), Eye Position(Event Player)), 700, To World, Direction and Turn Rate);
		Wait(0.250, Ignore Condition);
		Press Button(Event Player.Tmp[0], Button(Secondary Fire));
		Wait(0.250, Ignore Condition);
		Destroy Dummy Bot(Team 2, Slot Of(Event Player.Tmp[0]));
	}
}

rule("Doomfist Charger")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Doomfist;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Button Held(Event Player, Button(Ability 2)) == True;
	}

	actions
	{
		Create Dummy Bot(Hero(Torbjörn), Team 2, -1, World Vector Of(Forward * 2, Event Player, Rotation And Translation), Eye Position(Event Player));
		Event Player.Tmp[0]=Last Created Entity;
		Start Facing(Event Player.Tmp[0], Direction Towards(Eye Position(Event Player.Tmp[0]), Eye Position(Event Player)), 700, To World, Direction and Turn Rate);
		Wait(0.250, Ignore Condition);
		Press Button(Event Player.Tmp[0], Button(Secondary Fire));
		Wait(0.250, Ignore Condition);
		Destroy Dummy Bot(Team 2, Slot Of(Event Player.Tmp[0]));
		Heal(Event Player, Null, 25);
	}
}

rule("Genji Abilities")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Genji;
	}
	
	conditions
	{
		Event Player == Global.Dummies[8];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Press Button(Event Player, Button(Ability 2));
		Wait(3, Ignore Condition);
		Loop If(Is Alive(Event Player));
	}
}

rule("Genji Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Genji;
	}
	
	conditions
	{
		Event Player == Global.Dummies[8];
	}

	actions
	{
		Wait(0.25, Ignore Condition);	//Delay to see kill-credit
		Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[8]));
		Create Dummy Bot(Hero(Genji), Team 2, -1, Vector(70.368, -0.799, -20.782), Vector(-0.600, 0, 0.800));
		Global.Dummies[8]=Last Created Entity;
	}
}

rule("Mei Abilities")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Mei;
	}
	
	conditions
	{
		Event Player == Global.Dummies[9];
		Is Alive(Event Player) == True;
	}

	actions
	{
		if (Global.BotToggles[9]==1);
			Event Player.Tmp=Random Real(0.5,5);	// "5" is max ability duration
		else;
			Event Player.Tmp=5;
		End;
		Set Ability Cooldown(Event Player, Button(Ability 1),0);
		Press Button(Event Player, Button(Ability 1));
		Wait(Event Player.Tmp, Ignore Condition);
		if (Event Player.Tmp<5);
			Press Button(Event Player, Button(Ability 1));
			Wait(0.250, Ignore Condition);	//ability's frames
			Wait(0.250, Ignore Condition);	//wait for shot
		End;
		
		Loop If Condition Is True;
	}
}

rule("Mei Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Mei;
	}
	
	conditions
	{
		Event Player == Global.Dummies[9];
	}

	actions
	{
		Wait(0.25, Ignore Condition);	//Delay to see kill-credit
		Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[9]));
		Create Dummy Bot(Hero(Mei), Team 2, -1, Global.Buttons[15], Vector(-0.600, 0, 0.800));
		Global.Dummies[9]=Last Created Entity;
	}
}

rule("Reinhardt Abilities")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Reinhardt;
	}
	
	conditions
	{
		Event Player == Global.Dummies[10];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Set Ultimate Charge(Event Player, 100);
		Wait(Random Real(1.500, 3), Ignore Condition);
		Stop Holding Button(Event Player, Button(Secondary Fire));
		"If Reinhardt mode is 1 then choose ability randomly"
		Skip If(Global.BotToggles[10] != 1, 2);
		"Pick one of four actions: 1=primary, 2=fire strike, 3=charge, 4=ultimate"
		Event Player.Rnd = Random Integer(1, 4);
		Skip(1);
		"If Reinhardt mode > 1 then use number-1 for ability to execute"
		Event Player.Rnd = Global.BotToggles[10] - 1;
		Skip If(Event Player.Rnd != 1, 1);
		Start Holding Button(Event Player, Button(Primary Fire));
		Skip If(Event Player.Rnd != 2, 1);
		Press Button(Event Player, Button(Ability 2));
		Skip If(Event Player.Rnd != 3, 6);
		"Charge, wait 4 sec, then move Rein back to initial place"
		Press Button(Event Player, Button(Ability 1));
		Wait(4, Ignore Condition);
		Start Forcing Player Position(Event Player, Vector(64.112, 8.413, -30.583), True);
		Wait(0.250, Ignore Condition);
		Stop Forcing Player Position(Event Player);
		Set Facing(Event Player, Vector(-0.600, 0, 0.800), To World);
		Skip If(Event Player.Rnd != 4, 1);
		Press Button(Event Player, Button(Ultimate));
		Skip If(Event Player.Rnd != 5, 1);
		Press Button(Event Player, Button(Ultimate));
		Wait(2, Ignore Condition);
		"Wait until not longer hacked/knocked down/asleep/frozen/rooted/stunned"
		Wait Until(!(Has Status(Event Player, Hacked) || Has Status(Event Player, Knocked Down) || Has Status(Event Player, Asleep)
			|| Has Status(Event Player, Frozen) || Has Status(Event Player, Rooted) || Has Status(Event Player, Stunned)), 9999);
		Stop Holding Button(Event Player, Button(Primary Fire));
		Start Holding Button(Event Player, Button(Secondary Fire));
		Loop If(Is Alive(Event Player));
	}
}

rule("Reinhardt Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Reinhardt;
	}
	
	conditions
	{
		Event Player == Global.Dummies[10];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Reinhardt), Team 2, -1, Global.Buttons[16], Vector(-0.600, 0, 0.800));
		Global.Dummies[10]=Last Created Entity;
	}
}

rule("Sombra EMP")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Sombra;
	}
	
	conditions
	{
		Event Player == Global.Dummies[11];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 900, To World, Direction and Turn Rate);
		Heal(Event Player, Null, 200);
		Set Ultimate Charge(Event Player, 100);
		Wait(3.500, Ignore Condition);
		Press Button(Event Player, Button(Ability 1));
		Wait(Random Real(1, 4), Ignore Condition);
		Event Player.Rnd = Random Integer(1, 5);
		Skip If(Event Player.Rnd != 1, 1);
		Teleport(Event Player, Vector(75.883, -2.827, 37.092));
		Skip If(Event Player.Rnd != 2, 1);
		Teleport(Event Player, Vector(81.266, -2.702, 38.421));
		Skip If(Event Player.Rnd != 3, 1);
		Teleport(Event Player, Vector(84.809, -2.699, 42.465));
		Skip If(Event Player.Rnd != 4, 1);
		Teleport(Event Player, Vector(79.978, -2.698, 47.629));
		Skip If(Event Player.Rnd != 5, 1);
		Teleport(Event Player, Vector(74.649, -2.698, 41.761));
		Start Holding Button(Event Player, Button(Ultimate));
		Wait(2, Ignore Condition);
		Stop Holding Button(Event Player, Button(Ultimate));
		Teleport(Event Player, Vector(75.148, 0.298, 47.472));
		Loop If(Is Alive(Event Player));
	}
}

rule("Sombra Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Sombra;
	}
	
	conditions
	{
		Event Player == Global.Dummies[11];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Sombra), Team 2, -1, Vector(75.148, 0.298, 47.472), Vector(0.600, 0, -0.800));
		Global.Dummies[11]=Last Created Entity;
	}
}

rule("Reinhardt Stunned")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player == Global.Dummies[10];
		Has Status(Event Player, Stunned) == True;
	}

	actions
	{
		Wait(0.500, Ignore Condition);
		Clear Status(Event Player, Stunned);
	}
}

rule("Dva Bomb")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		D.Va;
	}
	
	conditions
	{
		Event Player == Global.Dummies[12];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 900, To World, Direction and Turn Rate);
		Heal(Event Player, Null, 200);
		Set Ultimate Charge(Event Player, 100);
		Start Holding Button(Event Player, Button(Secondary Fire));
		Wait(0.250, Ignore Condition);
		Stop Holding Button(Event Player, Button(Secondary Fire));
		Wait(3, Ignore Condition);
		Start Holding Button(Event Player, Button(Secondary Fire));
		Wait(0.250, Ignore Condition);
		Stop Holding Button(Event Player, Button(Secondary Fire));
		Wait(3, Ignore Condition);
		Start Holding Button(Event Player, Button(Secondary Fire));
		Wait(0.250, Ignore Condition);
		Stop Holding Button(Event Player, Button(Secondary Fire));
		Wait(3, Ignore Condition);
		Press Button(Event Player, Button(Ability 1));
		Wait(Random Real(1, 4), Ignore Condition);
		Start Holding Button(Event Player, Button(Ultimate));
		Wait(0.025, Ignore Condition);
		Stop Holding Button(Event Player, Button(Ultimate));
		Teleport(Event Player, Vector(60.771, 12.741, 19.205));
		Start Holding Button(Event Player, Button(Ultimate));
		Wait(0.025, Ignore Condition);
		Stop Holding Button(Event Player, Button(Ultimate));
		Loop If(Is Alive(Event Player));
	}
}

rule("Dva Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		D.Va;
	}
	
	conditions
	{
		Event Player == Global.Dummies[12];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(D.Va), Team 2, -1, Vector(60.771, 12.741, 19.205), Vector(0.600, 0, -0.800));
		Global.Dummies[12]=Last Created Entity;
	}
}

rule("Zarya Grav")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Zarya;
	}
	
	conditions
	{
		Event Player == Global.Dummies[13];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 900, To World, Direction and Turn Rate);
		Heal(Event Player, Null, 200);
		Set Ultimate Charge(Event Player, 100);
		Wait(Random Real(5, 7), Ignore Condition);
		Start Holding Button(Event Player, Button(Ultimate));
		Wait(0.025, Ignore Condition);
		Stop Holding Button(Event Player, Button(Ultimate));
		Loop If(Is Alive(Event Player));
	}
}

rule("Zarya Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Zarya;
	}
	
	conditions
	{
		Event Player == Global.Dummies[13];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Zarya), Team 2, -1, Vector(17.451, 4.099, 1.090), Vector(0.600, 0, -0.800));
		Global.Dummies[13]=Last Created Entity;
	}
}

rule("McCree HighNoon")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Cassidy;
	}
	
	conditions
	{
		Event Player == Global.Dummies[14];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Closest Player To(Position Of(Event Player),
			Team 1))), 900, To World, Direction and Turn Rate);
		Heal(Event Player, Null, 200);
		Set Ultimate Charge(Event Player, 100);
		Wait(Random Real(7, 9), Ignore Condition);
		Start Holding Button(Event Player, Button(Ultimate));
		Wait(0.025, Ignore Condition);
		Stop Holding Button(Event Player, Button(Ultimate));
		Wait(Random Real(2, 6), Ignore Condition);
		Start Holding Button(Event Player, Button(Primary Fire));
		Wait(0.025, Ignore Condition);
		Stop Holding Button(Event Player, Button(Primary Fire));
		Loop If(Is Alive(Event Player));
	}
}

rule("McCree Bot Dies")
{
	event
	{
		Player Died;
		Team 2;
		Cassidy;
	}
	
	conditions
	{
		Event Player == Global.Dummies[14];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Cassidy), Team 2, -1, Vector(36.860, 0.349, -25.874), Vector(0, 0, -0.800));
		Global.Dummies[14]=Last Created Entity;
	}
}

rule("Pocket_Lucio Button")	//Lúcio
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.Buttons[24], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[24]), Null,
			Event Player, False)) <= 0.4;
	}

	actions
	{
		if ((Global.Dummies[19]==Null) || (Entity Exists(Global.Dummies[19])==false));
			Create Dummy Bot(Hero(Lúcio), Team 1, -1, Vector(84,-3,18), Direction Towards(Position Of(Event Player), Eye Position(Event Player)));
			Global.Dummies[19]=Last Created Entity;
			Global.PlayerEventInfo[6]=Event Player;
			Small Message(Event Player, Custom String("Use ''Need Healing!'' for Boost"));
		else;
			Communicate(Global.Dummies[19], Goodbye);
			Wait(1, Ignore Condition);
			Destroy Dummy Bot(Team 1, Slot Of(Global.Dummies[19]));
			Global.Dummies[19]=Null;
			Global.PlayerEventInfo[6]=Null;
		End;
	}
}

rule("Pocket_Lucio")	//Lúcio
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Lúcio;
	}
	
	conditions
	{
		Event Player == Global.Dummies[19];
		Is Alive(Global.PlayerEventInfo[6]) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		"Preps"
		Wait(0.25, Ignore Condition);
		Start Scaling Player(Event Player, 0.15, True);
		Set Status(Event Player, Null, Phased Out, 9999);
		Start Forcing Dummy Bot Name(Event Player, Custom String("Pocket Lúcio"));
		Communicate(Event Player, Hello);
		
		"Cycle"
		while (Global.PlayerEventInfo[6]!=Null);
			Wait Until(Is Alive(Event Player)==True, 9999);
			Wait Until(Is Alive(Global.PlayerEventInfo[6])==True, 9999);
			Attach Players(Event Player, Global.PlayerEventInfo[6], Vector(0,-1.25,-1)+Eye Position(Global.PlayerEventInfo[6])-Position Of(Global.PlayerEventInfo[6]));
			Global.PlayerEventInfo[1]=Hero Of(Global.PlayerEventInfo[6]);
			Start Facing(Event Player, Facing Direction Of(Global.PlayerEventInfo[6]), 100, To World, Direction and Turn Rate);
			
			Wait Until
			(
				Is Alive(Global.PlayerEventInfo[6])==False
		||	Global.PlayerEventInfo[1]!=Hero Of(Global.PlayerEventInfo[6])
		||	Is Alive(Event Player)==False, 9999
			);
			Stop Facing(Event Player);
			Detach Players(Event Player);

		End;
	}
}

rule("Pocket_Lucio - Boost")	//Lúcio
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}
	
	conditions
	{
		Global.Dummies[19]!=Null;
		Is Communicating(Event Player, Need Healing)==True;
		Is Alive(Event Player)==True;
		Is Alive(Global.PlayerEventInfo[6])==True;
	}

	actions
	{
		Set Ability Cooldown(Global.Dummies[19], Button(Ability 2),0);
		Press Button(Global.Dummies[19], Button(Ability 2));
		//Communicate(Global.Dummies[19], Go);	//annoying response
	}
}

rule("Zen_Discord Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.Buttons[25], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[25]), Null,
			Event Player, False)) <= 0.4;
	}

	actions
	{
		if (Global.Dummies[20]!=null);
			disabled Destroy Dummy Bot(Team 1, Slot Of(Global.Dummies[20]));
		End;
		
		Small Message(Event Player, 3);
		Wait(1, Ignore Condition);
		Small Message(Event Player, 2);
		Wait(1, Ignore Condition);
		Small Message(Event Player, 1);
		Wait(0.5, Ignore Condition);
		
		Global.PlayerEventInfo[0]=Event Player;
		Create Dummy Bot(Hero(Zenyatta), Team 1, -1, Vector(84,-3,18), Direction Towards(Position Of(Event Player), Eye Position(Event Player)));
		Global.Dummies[20]=Last Created Entity;
	}
}

rule("Zen_Discord")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Zenyatta;
	}
	
	conditions
	{
		Event Player == Global.Dummies[20];
		Is Alive(Event Player) == True;
	}

	actions
	{
		"Preps"
		Start Scaling Player(Event Player, 0.1, True);
		Set Status(Event Player, Null, Phased Out, 9999);
		Start Forcing Dummy Bot Name(Event Player, Custom String("Zen Discord"));
		
		Attach Players(Event Player, Global.PlayerEventInfo[0], Vector(0,0,0.25)+Eye Position(Global.PlayerEventInfo[0])-Position Of(Global.PlayerEventInfo[0]));
		Start Facing(Event Player, Facing Direction Of(Global.PlayerEventInfo[0]), 1000, To World, Direction and Turn Rate);
		Wait(0.25, Ignore Condition);
		Press Button(Event Player, Button(Ability 2));
		Attach Players(Event Player, Global.PlayerEventInfo[0], Vector(0,0.25,0)+Eye Position(Global.PlayerEventInfo[0])-Position Of(Global.PlayerEventInfo[0]));
		Wait Until(Is Using Ability 2(Event Player)==true, 1);

		// Advansed Search
		if (Is Using Ability 2(Event Player)==false);	//Zen will try to shorten the distance to the target
			"Notification"
			Small Message(Global.PlayerEventInfo[0], Custom String("(advanced mode)"));
			Small Message(Global.PlayerEventInfo[0], Custom String("Searching for target..."));
			"Cycle Logic"
			Detach Players(Event Player);
			Stop Facing(Event Player);
			Event Player.Tmp=0;
			while ((Is Using Ability 2(Event Player)==false) && (Event Player.Tmp<7) && (Is Alive(Event Player)==true));
				Event Player.Tmp+=1;
				Start Forcing Player Position(Event Player, Position Of(Event Player)+Facing Direction Of(Event Player)*5, False);
				Wait(0.25, Ignore Condition);
				Press Button(Event Player, Button(Ability 2));
				Wait Until(Is Using Ability 2(Event Player)==true, 1);
			End;
			Stop Forcing Player Position(Event Player);
			"Cycle Result Logic"
			if (Is Using Ability 2(Event Player)==true);
				Communicate(Event Player, Attacking);	//Notify if target was found and where
				Attach Players(Event Player, Global.PlayerEventInfo[0], Vector(0,0.25,0)+Eye Position(Global.PlayerEventInfo[0])-Position Of(Global.PlayerEventInfo[0]));
			else;
				Small Message(Global.PlayerEventInfo[0], Custom String("Zen couldn't reach any target in this direction"));
			End;
		End;
		// Advansed Search
		
		Wait Until
		(
			Is Using Ability 2(Event Player)==false
	||	Is Alive(Event Player)==false
	||	Is Alive(Event Player)==False,	9999
		);
		
		Destroy Dummy Bot(Team 1, Slot Of(Event Player));
	}
}

rule("Ramattra_Falloff Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Position Of(Event Player), Global.Buttons[26]) <= 5;
		Distance Between(Global.Buttons[26], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[26]), Null,
			Event Player, False)) <= 0.2;
	}

	actions
	{
		if ((Global.Dummies[21]==Null) || (Entity Exists(Global.Dummies[21])==false) || (Event Player.Ruler[0]==false));
			"Button effect"
			Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[26], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Global.Buttons[26], 0.75);
			"Dummy creation"
			if (Entity Exists(Global.Dummies[21])==true);
				Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[21]));	//crunch
			End;
			Create Dummy Bot(Hero(Ramattra), Team 2, -1, Vector(92.82,-2,-7.63), Vector(-0.59,0,0.81));
			Global.Dummies[21]=Last Created Entity;
			Event Player.Ruler[0]=true;
			Event Player.Ruler[1]=Event Player;
			Event Player.Ruler[2]=Global.Dummies[21];
		else;
			"Button effect"
			Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Global.Buttons[26], 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Red), Global.Buttons[26], 0.75);
			"Dummy destruction"
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[21]));
			Global.Dummies[21]=Null;
			"Ruler config"
			Event Player.Ruler[0]=false;
		End;
	}
}

rule("Ramattra_Falloff")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Ramattra;
	}

	conditions
	{
		Event Player == Global.Dummies[21];
		Is Alive(Event Player)==True;
	}

	actions
	{
		Set Max Health(Event Player, 9999);
		Set Gravity(Event Player, 500);
		Heal(Event Player, Null, Max Health(Event Player));
	}
}

rule("Ramattra_Falloff - Restore Health")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Ramattra;
	}

	conditions
	{
		Event Player == Global.Dummies[21];
		Health(Event Player)<200;
		Is Alive(Event Player)==True;
	}

	actions
	{
		Heal(Event Player, Null, Max Health(Event Player));
	}
}

rule("Ramattra_Falloff Dies")
{
	event
	{
		Player Died;
		Team 2;
		Ramattra;
	}

	conditions
	{
		Event Player == Global.Dummies[21];
	}

	actions
	{
		Destroy Dummy Bot(Team 2, Slot Of(Event Player));
		Create Dummy Bot(Hero(Ramattra), Team 2, -1, Vector(92.82,-2,-7.63), Vector(-0.59,0,0.81));
		Global.Dummies[21]=Last Created Entity;
		Host Player.Ruler[2]=Global.Dummies[21];
	}
}

rule("Ramattra_Falloff - RidBot Button")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Position Of(Event Player), Global.Buttons[27]) <= 3;
		Distance Between(Global.Buttons[27], Ray Cast Hit Position(Eye Position(Event Player), Eye Position(Event Player)
			+ Facing Direction Of(Event Player) * Distance Between(Eye Position(Event Player), Global.Buttons[27]), Null,
			Event Player, False)) <= 0.1;
	}

	actions
	{
		"Button effect"
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Global.Buttons[27], 100);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Yellow), Global.Buttons[27], 0.5);
		
		"Remove Ram"
		if (Global.Dummies[21]!=null);
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[21]));
		End;
		
		"Remove prev Petal"
		if (Global.Dummies[22]!=null);
			Destroy Dummy Bot(Team 2, Slot Of(Global.Dummies[22]));
		End;
		
		"Dummy configuration/creation"
		Global.Dummies[0]=Array(Vector(92.82,-2,-7.63),9);	// [Position, Duration]
		Create Dummy Bot(Hero(Lifeweaver), Team 2, -1, Vector(47,20,40), Vector(0,0,0));
		Global.Dummies[22]=Last Created Entity;
		
		Wait(2, Ignore Condition);	//cd
	}
}

rule("LW_Petal")
{
	event
	{
		Ongoing - Each Player;
		All;
		Lifeweaver;
	}

	conditions
	{
		Event Player == Global.Dummies[22];
		Is Alive(Event Player) == True;
	}

	actions
	{
		Event Player.Tmp[0]=12-1;	//Petal default duration
		
		Start Forcing Dummy Bot Name(Event Player, Custom String("LW_Petal"));
		Set Status(Event Player, Null, Phased Out, 999);
		Start Scaling Player(Event Player, 0.1, True);
		Start Facing(Event Player, Vector(0,-2,0), 1000, To World, Direction and Turn Rate);
		Set Ability Cooldown(Event Player, Button(Ability 1),0);
		Teleport(Event Player, Global.Dummies[0][0]);
		Press Button(Event Player, Button(Ability 1));
		Wait(0.1, Ignore Condition);
		Teleport(Event Player, Vector(47,20,40));
		Wait(Global.Dummies[0][1] ? Global.Dummies[0][1] : Event Player.Tmp[0], Ignore Condition);
		Destroy Dummy Bot(Team Of(Event Player), Slot Of(Event Player));
	}
}

rule("Voiceline_Up – Discord")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Voice Line Up)==true;
		Global.SupportsVoicelines==true;
	}

	actions
	{
		if (Global.Dummies[20]!=null);
			disabled Destroy Dummy Bot(Team 1, Slot Of(Global.Dummies[20]));
		End;
		
		Global.PlayerEventInfo[0] = Event Player;
		Create Dummy Bot(Hero(Zenyatta), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
		Global.Dummies[20]=Last Created Entity;
	}
}

rule("Voiceline_Left – Nano")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Voice Line Left)==true;
		Global.SupportsVoicelines==true;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		Create Dummy Bot(Hero(Ana), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
		Global.Dummies[16]=Last Created Entity;
	}
}

rule("Voiceline_Right – Matrix")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Voice Line Right)==true;
		Global.SupportsVoicelines==true;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		Create Dummy Bot(Hero(Baptiste), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
		Global.Dummies[17]=Last Created Entity;
	}
}

rule("Voiceline_Down – Kitsune")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Voice Line Down)==true;
		Global.SupportsVoicelines==true;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		Create Dummy Bot(Hero(Kiriko), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
		Global.Dummies[18]=Last Created Entity;
	}
}

rule("Ultimate Support")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Is Communicating(Event Player, Need Help) == True;
	}

	actions
	{
		Small Message(Event Player, Custom String("You called for help..."));
		Event Player.Rnd = Random Integer(0,5);
		if (Event Player.Rnd==0);
			Wait(3, Ignore Condition);
			Small Message(Event Player, Custom String("But nobody came..."));
		else;
			Wait(2, Ignore Condition);
			Global.PlayerEventInfo[0] = Event Player;
			Create Dummy Bot(Hero(Zenyatta), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[20]=Last Created Entity;
			Create Dummy Bot(Hero(Kiriko), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[18]=Last Created Entity;
			Create Dummy Bot(Hero(Baptiste), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[17]=Last Created Entity;
			Wait(1, Ignore Condition);
			Create Dummy Bot(Hero(Ana), Team 1, -1, Vector(84,-3,18), Facing Direction Of(Event Player));
			Global.Dummies[16]=Last Created Entity;
			
			Wait(1.0, Ignore Condition);
			Small Message(Event Player, Custom String("Go Hero!"));
		End;
	}
}

rule("Call for LW_Petal")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Going In) == True;
	}

	actions
	{
		Global.PlayerEventInfo[0] = Event Player;
		Global.Dummies[0]=Array(Position Of(Event Player));
		Create Dummy Bot(Hero(Lifeweaver), Team 1, -1, Vector(47,20,40), Vector(0,0,0));
		Global.Dummies[22]=Last Created Entity;
	}
}

rule("Bots Limit")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(All Players(All Teams))>=12;
	}

	actions
	{
		Big Message(All Players(All Teams), Custom String("Warning! Bots Limit is Reached!"));
	}
}